// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkyAPI.Data;

namespace ParkyAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201130221403_AddElevationFieldToTrail")]
    partial class AddElevationFieldToTrail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ParkyAPI.Models.NationalPark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Established")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NationalParks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 12, 1, 1, 44, 1, 955, DateTimeKind.Local).AddTicks(7640),
                            Established = new DateTime(2020, 12, 1, 1, 44, 1, 965, DateTimeKind.Local).AddTicks(6088),
                            Name = "NP",
                            State = "IL"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2020, 12, 1, 1, 44, 1, 965, DateTimeKind.Local).AddTicks(7679),
                            Established = new DateTime(2020, 12, 1, 1, 44, 1, 965, DateTimeKind.Local).AddTicks(7732),
                            Name = "NPTest",
                            State = "TS"
                        });
                });

            modelBuilder.Entity("ParkyAPI.Models.Trail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Difficulty")
                        .HasColumnType("tinyint");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<double>("Elevation")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalParkId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalParkId");

                    b.ToTable("Trails");
                });

            modelBuilder.Entity("ParkyAPI.Models.Trail", b =>
                {
                    b.HasOne("ParkyAPI.Models.NationalPark", "NationalPark")
                        .WithMany()
                        .HasForeignKey("NationalParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NationalPark");
                });
#pragma warning restore 612, 618
        }
    }
}
